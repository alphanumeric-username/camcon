#pragma once

#include <win32_wrapper/window.hpp>

#include <Windows.h>

#include <string>
#include <functional>
#include <memory>


namespace win32w
{


/// @brief Simplifies window creation process
class WindowBuilder
{
private:
    std::wstring className_ {};
public:
    WindowBuilder();

    /// @brief Creates a window based on the class name.
    ///
    /// This function should be called only after the WNDClass was created.
    /// 
    /// @see WindowBuilder#createClass() createClass()
    /// @param title Window title.
    /// @param x Initial x position
    /// @param y Initial y position
    /// @param width Initial width
    /// @param height Initial height
    /// @return A pointer the created window.
    std::shared_ptr<Window> build(
        std::wstring title, 
        int x = CW_USEDEFAULT,
        int y = CW_USEDEFAULT,
        int width = CW_USEDEFAULT,
        int height = CW_USEDEFAULT,
        DWORD style = WS_OVERLAPPEDWINDOW
    );

    /// @brief Generates a Class Name.
    void generateClassName();

    /// @brief Manually sets the class name.
    /// @param className The class name.
    void setClassName(std::wstring className);

    /// @brief Creates a WNDClass based on the class named generated by `generateClassName`.
    ///
    /// Must be called only once after `generateClassName`.
    void createClass();
};

}
